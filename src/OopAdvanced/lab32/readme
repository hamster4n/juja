В порт заходит большое количество разных кораблей. Для работы с ними был разработан базовый
абстрактный класс AbstractShip, который включает в себя все параметры, которые имеет каждый
корабль: длинна (Length), ширина (Width), водоизмещение (displacement) и несколько методов
для получения информации про корабль. В этом классе описан абстрактный метод calculatePayment(),
который производит расчет оплаты за обслуживание портом разных типов кораблей. Каждый корабль имеет
 параметр от которого зависит плата за обслуживание. Порт приинимает следующие типы кораблей:
 лайнеры (Liner), танкеры (Tanker), грузовые (Cargo).

Для обеспечения эффективного использования ресурсов порта в классе OdessaSeaPort необходимо
реализовать статический метод, который распологает корабли по возрастанию оплаты услуг порта.
На вход метода подается массив типа AbstractShip.

public static String sortSumPaymentAsc(AbstractShip[] arrayShips)

На выходе ожидается печать отсортированного массива в следующем формате:

TestTankerName=25000.0TestCargoName=55000.0TestLinerName=100000.0

Если во входном массиве 0 элементов или если в качестве параметра передан null вернуть пустую строку.